/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Robótica Paraná (https://sketchfab.com/roboticaparana)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/aula-08-led-e-resistor-circuito-3-de941b810a6543e483c399c261ae09be
Title: Aula 08 - LED e Resistor - Circuito 3
*/

import React, { useRef, useState, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';

const Breadboard = (props) => {
  const groupRef = useRef();
  const { nodes, materials } = useGLTF('models/breadboard.glb');

  const [isDragging, setIsDragging] = useState(false);
  const previousMouseRef = useRef({ x: 0, y: 0 });
  const rotationRef = useRef({ x: 0, y: 0 });

  const handlePointerDown = (e) => {
    e.stopPropagation();
    setIsDragging(true);
    previousMouseRef.current = { x: e.clientX, y: e.clientY };
  };

  const handlePointerUp = () => {
    setIsDragging(false);
  };

  const handlePointerMove = (e) => {
    if (isDragging) {
      e.stopPropagation();

      // Calculate mouse movement
      const deltaX = (e.clientX - previousMouseRef.current.x) / 100;
      const deltaY = (e.clientY - previousMouseRef.current.y) / 100;

      // Update rotation based on mouse movement
      rotationRef.current.x += deltaY;
      rotationRef.current.y += deltaX;

      // Update previous mouse position
      previousMouseRef.current = { x: e.clientX, y: e.clientY };

      // Apply rotation to the group
      if (groupRef.current) {
        groupRef.current.rotation.x = rotationRef.current.x;
        groupRef.current.rotation.y = rotationRef.current.y;
      }
    }
  };

  // Add and remove pointer move and up listeners
  useEffect(() => {
    const handleGlobalPointerUp = () => setIsDragging(false);
    window.addEventListener('pointerup', handleGlobalPointerUp);
    window.addEventListener('pointermove', handlePointerMove);

    return () => {
      window.removeEventListener('pointerup', handleGlobalPointerUp);
      window.removeEventListener('pointermove', handlePointerMove);
    };
  }, [isDragging]);
  
  const handlePointerOver = (event) => {
    event.stopPropagation();
    document.body.style.cursor = 'pointer';
  };

  const handlePointerOut = (event) => {
    event.stopPropagation();
    document.body.style.cursor = 'default';
  };

  return (
    <group 
      {...props} 
      dispose={null} 
      ref={groupRef} 
      onPointerDown={handlePointerDown}
      onPointerUp={handlePointerUp}
      onPointerOver={handlePointerOver}
      onPointerOut={handlePointerOut}
    >

      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['BRANCO_005-material'].geometry}
          material={materials['BRANCO.005']}
        />
        <lineSegments geometry={nodes.Object_5.geometry} material={materials.material_0} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_023-material'].geometry}
          material={materials['Material.023']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_024-material'].geometry}
          material={materials['Material.024']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_025-material'].geometry}
          material={materials['Material.025']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Vermelgo_Fio_008-material'].geometry}
          material={materials['Vermelgo_Fio.008']}
        />
        <lineSegments geometry={nodes.Object_15.geometry} material={materials.material_0} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_017-material'].geometry}
          material={materials['PlasticoPreto.017']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_013-material'].geometry}
          material={materials['Metal.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_013-material_1'].geometry}
          material={materials['Metal.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_013-material_2'].geometry}
          material={materials['Metal.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_013-material_3'].geometry}
          material={materials['Metal.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PCB_topo_006-material'].geometry}
          material={materials['PCB_topo.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_026-material'].geometry}
          material={materials['Material.026']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['LED_005-material'].geometry}
          material={materials['LED.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['laranja_006-material'].geometry}
          material={materials['laranja.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_027-material'].geometry}
          material={materials['Material.027']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Material_028-material'].geometry}
          material={materials['Material.028']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Materiais_006-material'].geometry}
          material={materials['Materiais.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PCB_BASE_006-material'].geometry}
          material={materials['PCB_BASE.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_010-material'].geometry}
          material={materials['Protoboard.010']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['BRANCO_005-material_1'].geometry}
          material={materials['BRANCO.005']}
        />
        <lineSegments geometry={nodes.Object_46.geometry} material={materials.material_0} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['aluminio_004-material'].geometry}
          material={materials['aluminio.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['cobre_005-material'].geometry}
          material={materials['cobre.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['vidro_vermelho_003-material'].geometry}
          material={materials['vidro_vermelho.003']}
        />
        <lineSegments geometry={nodes.Object_54.geometry} material={materials.material_0} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['aluminio_004-material_1'].geometry}
          material={materials['aluminio.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['cobre_005-material_1'].geometry}
          material={materials['cobre.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['vidro_azul_001-material'].geometry}
          material={materials['vidro_azul.001']}
        />
        <lineSegments geometry={nodes.Object_62.geometry} material={materials.material_0} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['aluminio_004-material_2'].geometry}
          material={materials['aluminio.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['cobre_005-material_2'].geometry}
          material={materials['cobre.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['vidro_amarelo_003-material'].geometry}
          material={materials['vidro_amarelo.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_1'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_2'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_3'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_4'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_5'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_6'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_012-material'].geometry}
          material={materials['Metal.012']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_7'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_8'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_9'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_10'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_11'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_12'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_13'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_14'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_15'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_16'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_17'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_18'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Protoboard_011-material_19'].geometry}
          material={materials['Protoboard.011']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_019-material'].geometry}
          material={materials['PlasticoPreto.019']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Vermelgo_Fio_009-material'].geometry}
          material={materials['Vermelgo_Fio.009']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Azul_Servo_004-material'].geometry}
          material={materials['Azul_Servo.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_020-material'].geometry}
          material={materials['PlasticoPreto.020']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Jumper_2_001-material'].geometry}
          material={materials['Jumper_2.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_1'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_1'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_2'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_2'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_3'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_3'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Jumper_1_001-material'].geometry}
          material={materials['Jumper_1.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Jumper_0_003-material'].geometry}
          material={materials['Jumper_0.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_4'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_4'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_5'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_5'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Jumper_003-material'].geometry}
          material={materials['Jumper.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_6'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_6'].geometry}
          material={materials['Metal.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['PlasticoPreto_021-material_7'].geometry}
          material={materials['PlasticoPreto.021']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Metal_014-material_7'].geometry}
          material={materials['Metal.014']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('models/breadboard.glb')

export default Breadboard;
